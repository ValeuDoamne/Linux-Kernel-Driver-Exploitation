

first_list = [
	0xfffffffffffffffb, # 0x0021 
	0xffffffffae87b1ef, # 0x0022 
	0x7fffc859c460, # 0x0023 
	0x00000400, # 0x0024 
	0xffff9462801b7ef8, # 0x0025 
	0x00000000, # 0x0026 
	0xffffffffaf423ba0, # 0x0027 
	0xffff8f748136b600, # 0x0028 
	0xffffffffae8094f8, # 0x0029 
	0xffffffffae7e1fd2, # 0x002a 
	0xffff8f7481b69000, # 0x002b 
	0xffff8f7481042d00, # 0x002c 
	0xffffffffae7e7b00, # 0x002d 
	0xffff8f7481b69000, # 0x002e 
	0xffff8f7481042d00, # 0x002f 
	0xffff8f7481b69000, # 0x0030 
	0xffffffffae7e7c94, # 0x0031 
	0xffff8f7481b69000, # 0x0032 
	0x00000003, # 0x0033 
	0xffff8f748136b600, # 0x0034 
	0xffffff9c, # 0x0035 
	0x7b17af11972b6800, # 0x0036 
	0xffff8f748136b600, # 0x0037 
	0xffff9462801b7f30, # 0x0038 
	0xfffffffffffffff7, # 0x0039 
	0x00000000, # 0x003a 
	0xffff9462801b7ef8, # 0x003b 
	0x00000400, # 0x003c 
	0xffffffffae809b3e, # 0x003d 
	0x7fffc859c460, # 0x003e 
	0x00000000, # 0x003f 
	0x7b17af11972b6800, # 0x0040 
	0xffff9462801b7f58, # 0x0041 
	0x00000000, # 0x0042 
	0x00000000, # 0x0043 
	0x00000000, # 0x0044 
	0x00000000, # 0x0045 
	0xffff9462801b7f48, # 0x0046 
	0xffffffffaf1e78e2, # 0x0047 
	0x00000000, # 0x0048 
	0x00000000, # 0x0049 
	0xffffffffaf20012b, # 0x004a 
	0x00000001, # 0x004b 
	0x004a7848, # 0x004c 
	0x7fffc859cd98, # 0x004d 
	0x7fffc859cd88, # 0x004e 
	0x7fffc859cc70, # 0x004f 
	0x00000001, # 0x0050 
	0x00000246, # 0x0051 
	0x00000000, # 0x0052 
	0x00000004, # 0x0053 
	0x00000110, # 0x0054 
	0xffffffffffffffda, # 0x0055 
	0x004205d1, # 0x0056 
	0x00000400, # 0x0057 
	0x7fffc859c460, # 0x0058 
	0x00000003, # 0x0059 
	0x00000000, # 0x005a 
	0x004205d1, # 0x005b 
	0x00000033, # 0x005c 
	0x00000246, # 0x005d 
	0x7fffc859c448, # 0x005e 
	0x0000002b, # 0x005f 
	0x00000000, # 0x0060 
	0x00000000, # 0x0061 
	0x00000000, # 0x0062 
	0x00000000, # 0x0063 
	0x00000000, # 0x0064 
	0x00000000, # 0x0065 
	0x00000000, # 0x0066 
	0x00000000, # 0x0067 
	0x00000000, # 0x0068 
	0x00000000, # 0x0069 
	0x00000000, # 0x006a 
	0x00000000, # 0x006b 
	0x00000000, # 0x006c 
	0x00000000, # 0x006d 
	0x00000000, # 0x006e 
	0x00000000, # 0x006f 
	0x00000000, # 0x0070 
	0x00000000, # 0x0071 
	0x00000000, # 0x0072 
	0x00000000, # 0x0073 
	0x00000000, # 0x0074 
	0x00000000, # 0x0075 
	0x00000000, # 0x0076 
	0x00000000, # 0x0077 
	0x00000000, # 0x0078 
	0x00000000, # 0x0079 
	0x00000000, # 0x007a 
	0x00000000, # 0x007b 
	0x00000000, # 0x007c 
	0x00000000, # 0x007d 
	0x00000000, # 0x007e 
	0x00000000, # 0x007f 
]
text_section_first = 0xffffffffae600000
sencond_list = [
	0xfffffffffffffffb, # 0x0021 
	0xffffffff9de7b1ef, # 0x0022 
	0x7fff929b2210, # 0x0023 
	0x00000400, # 0x0024 
	0xffffa714401b7ef8, # 0x0025 
	0x00000000, # 0x0026 
	0xffffffff9ea23ba0, # 0x0027 
	0xffffa44281367600, # 0x0028 
	0xffffffff9de094f8, # 0x0029 
	0xffffffff9dde1fd2, # 0x002a 
	0xffffa44281b6a000, # 0x002b 
	0xffffa44281042d00, # 0x002c 
	0xffffffff9dde7b00, # 0x002d 
	0xffffa44281b6a000, # 0x002e 
	0xffffffff9dd8a523, # 0x002f 
	0xffffa44281b6a000, # 0x0030 
	0xffffffff9dde7c94, # 0x0031 
	0xffffa44281b6a000, # 0x0032 
	0x004204f3, # 0x0033 
	0x00000000, # 0x0034 
	0x00000000, # 0x0035 
	0xbc3567cfb7d0a500, # 0x0036 
	0xffffa44281367600, # 0x0037 
	0xffffa714401b7f30, # 0x0038 
	0xfffffffffffffff7, # 0x0039 
	0x00000000, # 0x003a 
	0xffffa714401b7ef8, # 0x003b 
	0x00000400, # 0x003c 
	0xffffffff9de09b3e, # 0x003d 
	0x7fff929b2210, # 0x003e 
	0x00000000, # 0x003f 
	0xbc3567cfb7d0a500, # 0x0040 
	0xffffa714401b7f58, # 0x0041 
	0x00000000, # 0x0042 
	0x00000000, # 0x0043 
	0x00000000, # 0x0044 
	0x00000000, # 0x0045 
	0xffffa714401b7f48, # 0x0046 
	0xffffffff9e7e78e2, # 0x0047 
	0x00000000, # 0x0048 
	0x00000000, # 0x0049 
	0xffffffff9e80012b, # 0x004a 
	0x00000001, # 0x004b 
	0x004a7848, # 0x004c 
	0x7fff929b2b48, # 0x004d 
	0x7fff929b2b38, # 0x004e 
	0x7fff929b2a20, # 0x004f 
	0x00000001, # 0x0050 
	0x00000246, # 0x0051 
	0x00000000, # 0x0052 
	0x00000004, # 0x0053 
	0x00000110, # 0x0054 
	0xffffffffffffffda, # 0x0055 
	0x004205d1, # 0x0056 
	0x00000400, # 0x0057 
	0x7fff929b2210, # 0x0058 
	0x00000003, # 0x0059 
	0x00000000, # 0x005a 
	0x004205d1, # 0x005b 
	0x00000033, # 0x005c 
	0x00000246, # 0x005d 
	0x7fff929b21f8, # 0x005e 
	0x0000002b, # 0x005f 
	0x00000000, # 0x0060 
	0x00000000, # 0x0061 
	0x00000000, # 0x0062 
	0x00000000, # 0x0063 
	0x00000000, # 0x0064 
	0x00000000, # 0x0065 
	0x00000000, # 0x0066 
	0x00000000, # 0x0067 
	0x00000000, # 0x0068 
	0x00000000, # 0x0069 
	0x00000000, # 0x006a 
	0x00000000, # 0x006b 
	0x00000000, # 0x006c 
	0x00000000, # 0x006d 
	0x00000000, # 0x006e 
	0x00000000, # 0x006f 
	0x00000000, # 0x0070 
	0x00000000, # 0x0071 
	0x00000000, # 0x0072 
	0x00000000, # 0x0073 
	0x00000000, # 0x0074 
	0x00000000, # 0x0075 
	0x00000000, # 0x0076 
	0x00000000, # 0x0077 
	0x00000000, # 0x0078 
	0x00000000, # 0x0079 
	0x00000000, # 0x007a 
	0x00000000, # 0x007b 
	0x00000000, # 0x007c 
	0x00000000, # 0x007d 
	0x00000000, # 0x007e 
	0x00000000, # 0x007f 
]
text_section_second =  0xffffffff9dc00000

for idx, (i, j) in enumerate(zip(first_list, sencond_list)):
    if (text_section_first - i) == (text_section_second - j):
        print(f"We found the address at {idx}: {hex(i)}")
